// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
}

enum PaymentMethod {
  CASH
  CHECK
  UNPAID
}

model Member {
  id           String        @id @default(cuid())
  name         String
  address      String        @unique
  city         String
  state        String
  zipCode      String
  phoneNumber  String        @unique
  owedBalance  Float?
  transactions Transaction[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PurchasedProduct {
  id               String @id @default(cuid())
  name             String
  price            Float
  purchaseQuantity Int?

  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  transaction   Transaction? @relation(fields: [transactionId], references: [id])
  transactionId String?
  product       Product      @relation(fields: [productId], references: [id])
  productId     String

  @@index([transactionId])
  @@index([productId])
}

model Transaction {
  id                     String        @id @default(cuid())
  totalAmount            Float
  orderNumber            Int           @unique @default(autoincrement())
  paymentMethod          PaymentMethod
  checkNumber            Int?
  checkAmount            Int?
  totalQuantityPurchased Int

  member            Member?            @relation(fields: [memberId], references: [id])
  memberId          String?
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  purchasedProducts PurchasedProduct[]

  @@index([memberId])
}

model Product {
  id               String             @id @default(cuid())
  name             String
  description      String?
  price            Float
  boxQuantity      Int?
  quantity         Int?
  grams            Int?
  sku              String?
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  supplier         Supplier?          @relation(fields: [supplierId], references: [id])
  supplierId       String?
  purchasedProduct PurchasedProduct[]

  @@index([supplierId])
}

model Supplier {
  id          String    @id @default(cuid())
  name        String
  owedBalance Float?
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Expense {
  id        String   @id @default(cuid())
  name      String
  amount    Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
