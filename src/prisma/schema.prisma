// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
}

enum PaymentMethod {
  CASH
  CHECK
  CARD
}

model Member {
  id          String        @id @default(cuid())
  name        String
  address     String
  city        String
  state       String
  zipCode     String
  phoneNumber String
  owedBalance Float?
  Transaction Transaction[]
}

model Transaction {
  id            String        @id @default(cuid())
  totalAmount   Float
  orderNumber   Int           @unique @default(autoincrement())
  paymentMethod PaymentMethod
  Member        Member?       @relation(fields: [memberId], references: [id])
  memberId      String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  @@index([memberId])
}

model ProductCategory {
  id        String    @id @default(cuid())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Products  Product[]
}

model Product {
  id                String           @id @default(cuid())
  name              String
  description       String?
  price             Float
  boxQuantity       Int?
  quantity          Int?
  grams             Int?
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  ProductCategory   ProductCategory? @relation(fields: [productCategoryId], references: [id])
  productCategoryId String?
  Supplier          Supplier?        @relation(fields: [supplierId], references: [id])
  supplierId        String?

  @@index([productCategoryId])
  @@index([supplierId])
}

model Supplier {
  id          String    @id @default(cuid())
  name        String
  owedBalance Float?
  Products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
